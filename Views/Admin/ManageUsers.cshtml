@* @model List<(EliteSportsAcademy.Models.Account.ApplicationUser User, IList<string> UserRoles)> *@
@model List<EliteSportsAcademy.ViewModel.Account.ManageUsersViewModel>


@{
    Layout = "~/Views/Shared/DashBoard/_AdminLayout.cshtml";
    ViewData["Title"] = "Manage Users";
    var roles = ViewBag.Roles as List<Microsoft.AspNetCore.Identity.IdentityRole>;
}

<div class="container mt-5">
    @* <h2>Manage Users</h2> *@

    @* @if (TempData["Error"] != null) *@
    @* { *@
    @*     <div class="alert alert-danger">@TempData["Error"]</div> *@
    @* } *@
    @* @if (TempData["Success"] != null) *@
    @* { *@
    @*     <div class="alert alert-success">@TempData["Success"]</div> *@
    @* } *@

    @if (Model != null && Model.Any())
    {
        <table class="table table-striped mt-4">
            <thead class="table-dark">
                <tr>
                    <th>Email</th>
                    <th>Current Role</th>
                    <th>Change Role</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @* @foreach (var (user, userRoles) in Model) *@
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.Email</td>
                        @* <td>@(userRoles.FirstOrDefault() ?? "No Role")</td> *@
                        <td>@(user.Roles!.FirstOrDefault() ?? "No Role")</td>
                        <td>
                            <form asp-action="ChangeUserRole" asp-controller="Admin" method="post" class="d-flex gap-2">
                                <input type="hidden" name="userId" value="@user.Id" />
                                <select class="form-select" name="newRole" required>
                                    <option disabled selected>Select Role</option>
                                    @foreach (var role in roles!)
                                    {
                                        <option value="@role.Name">@role.Name</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-primary">Change</button>
                            </form>
                        </td>
                        <td>
                            <!-- Optionally: Add Delete, Block, View Profile buttons here -->
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info mt-4 text-center">
            No users found.
        </div>
    }
</div>



@section Scripts {
    <script>

        // Wait for the page to load
        // window.addEventListener('DOMContentLoaded', (event) => {
        //     Find all alert divs
        //     const alerts = document.querySelectorAll('.alert');

        //     alerts.forEach(alert => {
        //         setTimeout(() => {
        //             alert.classList.add('fade');
        //             setTimeout(() => {
        //                 alert.remove(); Remove from DOM after fading
        //             }, 500); Wait for fade animation
        //         }, 3000); 3000ms = 3 seconds
        //     });
        // });


        $(document).ready(function () {
            // Find all alert divs
            // $('.alert').each(function () {
            //     var alert = $(this);
            //     setTimeout(function () {
            //         alert.fadeOut(500, function () {
            //             $(this).remove(); Remove from DOM after fading out
            //         });
            //     }, 3000); 3 seconds
            // });

            var successMessage = '@TempData["Success"]';
            var errorMessage = '@TempData["Error"]';

            if (successMessage) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: successMessage,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }

            if (errorMessage) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: errorMessage,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }

        });

    </script>
}
